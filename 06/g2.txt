Start ListOfStatements Statement Declaration Assignment If While For IO DeclarationPrefix DeclarationSufix Identifier Type Expression SimpleType Letter Digit NumberConstant StringConstant ExpPrefix ExpSuffix CharConstant Sign NumberConstantSimple NonZeroDigit StringConstantSimple Car Condition Sequence ForValue Constant Read Write Relation IdentifierP StatementP NumberConstantSimpleP StringConstantSimpleP IdentifierCharacter OptionalElse Operand Operator
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9 = == >= <= * / + - < > % += -= *= /= %= && || ! != [ ] { } ( ) ; : , number decimal str car let seq loop vector fi fie fiefi $<< $>> rad var in ' `
Start
Start->ListOfStatements
ListOfStatements->Statement StatementP
StatementP->Statement StatementP|ε
Statement->Declaration|Assignment|If|While|For|IO
Declaration->DeclarationPrefix DeclarationSufix
DeclarationPrefix->var Identifier : Type
DeclarationSufix->;|= Expression ;
Assignment->Identifier = Expression ;
SimpleType->number|decimal|str|car
Type->SimpleType|vector < SimpleType >
Identifier->Letter IdentifierP
IdentifierP->IdentifierCharacter IdentifierP|ε
Constant->NumberConstant|StringConstant|CharConstant
NumberConstant->Sign NumberConstantSimple|NumberConstantSimple
NumberConstantSimple->Digit NumberConstantSimpleP
NumberConstantSimpleP->Digit NumberConstantSimpleP|ε
StringConstant->` StringConstantSimple `
StringConstantSimple->Car StringConstantSimpleP
StringConstantSimpleP->Car StringConstantSimpleP|ε
CharConstant->' Car '
If->fi ( Condition ) { ListOfStatements } OptionalElse
OptionalElse->fie { ListOfStatements }|ε
While->loop ( Condition ) { ListOfStatements }
For->let Identifier in seq ( Sequence ) { ListOfStatements }
Sequence->ForValue , ForValue , ForValue
ForValue->Expression
Read->$<< Identifier ;
Write->$>> Expression ;
IO->Read|Write
Condition->Expression Relation Expression
Relation-><|>|<=|>=|==|!=
Expression->ExpPrefix ExpSuffix
ExpPrefix->Operand 
ExpSuffix->Operator Operand|ε
Operator->+|-|*|/|%
Operand->Identifier|Constant
IdentifierCharacter->Letter|Digit
Car->Letter|Digit
Letter->a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|z|y|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z
Digit->0|NonZeroDigit
NonZeroDigit->1|2|3|4|5|6|7|8|9
Sign->+|-
