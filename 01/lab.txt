// P1
$<< n1;
$<< n2;
$<< n3;

var max: number = n1;

fi (n2 > max) {
    max = n2;
}

fi (n3 > max) {
    max = n3;
}

$>> max;

// P2
var n: number;

$<< n;

fi (n == 2) {
    $>> `Prime`;
}

fi (n % 2 == 0) {
    $>> `Not prime`;
}

var sqaureRoot: number = rad(n);

let i in seq(3, sqaureRoot, 2) {
    fi (n % i == 0) {
        $>> `Not prime`;
    }
}

$>> `Prime`;


// P3

var array: vector<number>;
var len: number;

$<< len;

let i in seq(len) {
    $<< array[i];
}

var sum: number = 0;

loop (len) {
    dec len;
    sum += $array[len];
}   

$>> sum;


// P1Err
variable n1: number;
var n2: number;

$<< n1;
$<< n2;

var max: number = n1;

fi (n2 $ max) {
    max | n2;
}

$>> max;
